AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template primitive which creates an Internet Gateway resource.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Nested Template Information
        Parameters:
          - NestedTemplateBaseUrl
          - RolesTemplate
          - NodesRolesTemplate
          - SecurityGroupTemplate
          - SecurityGroupIngressTemplate
      - Label:
          default: Network Information
        Parameters:
          - SecurityGroupVpcId
          - SecurityGroupCidrIp
          - KeyPairName
          - KeyPairPrivateKey
          - OpsWorksCmSubnetA
          - OpsWorksCmSubnetB
          - OpsWorksCmSubnetC
          - AssociatePublicIpAddress
      - Label:
          default: Opsworks CM Server settings
        Parameters:
          - InstanceType
          - Engine
          - EngineModel
          - EngineVersion
          - ChefAutomatePivotalKey
          - ChefAutomateAdminPasswordLength
          - PreferredBackupWindow
          - BackupRetentionCount
          - DisableAutomatedBackup
      - Label:
          default: Environment and Tags
        Parameters:
          - EnvironmentId
          - PreferredMaintenanceWindow
Parameters:
  NestedTemplateBaseUrl:
    Type: String
    Default: https://s3-us-west-2.amazonaws.com/com.witsolutions/cloudformation-primitives/
  RolesTemplate:
    Type: String
    Default: opsworks-cm-roles.yaml
  NodesRolesTemplate:
    Type: String
    Default: opsworks-cm-nodes-roles.yaml
  SecurityGroupTemplate:
    Type: String
    Default: security_group.yaml
  SecurityGroupIngressTemplate:
    Type: String
    Default: security_group_ingress.yaml
  SecurityGroupVpcId:
    Type: AWS::EC2::VPC::Id
  SecurityGroupCidrIp:
    Type: String
    Default: 192.168.1.0/24
    Description: CIDR block for ingress rule to OpsWorks CM Server. Usually the CIDR of the VPC into which you're deploying.
  KeyPairName:
    Type: String
    Default: KeyPairName
    Description: Name of the SSH keypair to be set on the OpsWorks CM server.
  KeyPairPrivateKey:
    Type: String
    Description: Private key of the SSH keypair to be set on the OpsWorks CM server. This value will be stored in AWS Secrets for later retrieval.
  PreferredBackupWindow:
    Type: String
    Default: "Sat:08:01"
    Description: Preferred backup window time in UTC, in the form HH:MM (daily) or DDD:HH:MM for weekly
  PreferredMaintenanceWindow:
    Type: String
    Default: "Fri:08:01"
    Description: Preferred maintenance window time in UTC, in the form HH:MM (daily) or DDD:HH:MM for weekly
  OpsWorksCmSubnetA:
    Type: AWS::EC2::Subnet::Id
  OpsWorksCmSubnetB:
    Type: AWS::EC2::Subnet::Id
  OpsWorksCmSubnetC:
    Type: AWS::EC2::Subnet::Id
  ChefAutomatePivotalKey:
    Type: String
  ChefAutomateAdminPasswordLength:
    Type: Number
    Default: 8
  AssociatePublicIpAddress:
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
    Description: Whether or not associate a pulblic IP with the OpsWorks CM server, if it is in a public subnet
  BackupRetentionCount:
    Type: Number
    Default: 1
  DisableAutomatedBackup:
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  Engine:
    Type: String
    AllowedValues:
      - ChefAutomate
      - Puppet
    Default: ChefAutomate
  EngineModel:
    Type: String
    AllowedValues:
      - Single
      - Monolithic
    Default: Single
  EngineVersion:
    Type: String
    AllowedValues:
      - 12
      - 2017
    Default: 12
  InstanceType:
    Type: String
    AllowedValues:
      - m4.large
      - r4.xlarge
      - r4.2xlarge
    Default: m4.large
  EnvironmentId:
    Type: String
    Default: dev
  Contact:
    Type: String
    Default: ContactName
  ProjectId:
    Type: String
    Default: ProjectId
  ProjectData:
    Type: String
    Default: env=DEV
Resources:
  OpsWorksCmSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "This is a Secrets Manager secret for an OpsWorks for Chef Automate resource, containing the pivotal key and admin password necessary for the initial setup of OpsWorks for Chef Automate, as well as the SSH keypair which will be set on the instance."
      Name: !Sub ${ProjectId}-${EnvironmentId}-opsworks-cm
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"CHEF_AUTOMATE_PIVOTAL_KEY": ${ChefAutomatePivotalKey},"keypair": ${KeyPairName},"privatekey": ${KeyPairPrivateKey}}'
        GenerateStringKey: CHEF_AUTOMATE_ADMIN_PASSWORD
        PasswordLength: !Ref ChefAutomateAdminPasswordLength
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: EnvironmentId
          Value: !Ref EnvironmentId
        - Key: Contact
          Value: !Ref Contact
        - Key: ProjectId
          Value: !Ref ProjectId
        - Key: ProjectData
          Value: !Ref ProjectData
  OpsWorksCmRoles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${NestedTemplateBaseUrl}${RolesTemplate}
  OpsWorksCmNodesRoles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${NestedTemplateBaseUrl}${NodesRolesTemplate}
  OpsworksCmSecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VpcId: !Ref SecurityGroupVpcId
        GroupDescription: OpsWorks CM Security Group controlling ingress to an OpsWorks CM server.
        ShortName: !Sub ${ProjectId}-${EnvironmentId}-opsworks-cm
        EnvironmentId: !Ref EnvironmentId
        Contact: !Ref Contact
        ProjectId: !Ref ProjectId
        ProjectData: !Ref ProjectData
      TemplateURL: !Sub ${NestedTemplateBaseUrl}${SecurityGroupTemplate}
      Tags:
        - Key: EnvironmentId
          Value: !Ref EnvironmentId
        - Key: Contact
          Value: !Ref Contact
        - Key: ProjectId
          Value: !Ref ProjectId
        - Key: ProjectData
          Value: !Ref ProjectData
  OpsworksCmSecurityGroupIngress22:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        IpProtocol: TCP
        GroupId: !GetAtt OpsworksCmSecurityGroup.Outputs.SecurityGroupId
        FromPort: "22"
        CidrIp: !Ref SecurityGroupCidrIp
        ToPort: "22"
      TemplateURL: !Sub ${NestedTemplateBaseUrl}${SecurityGroupIngressTemplate}
  OpsworksCmSecurityGroupIngress443:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        IpProtocol: TCP
        GroupId: !GetAtt OpsworksCmSecurityGroup.Outputs.SecurityGroupId
        FromPort: "443"
        CidrIp: !Ref SecurityGroupCidrIp
        ToPort: "443"
      TemplateURL: !Sub ${NestedTemplateBaseUrl}${SecurityGroupIngressTemplate}
  OpsWorksCmServer:
    Type: AWS::OpsWorksCM::Server
    Properties: 
      AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
      BackupRetentionCount: !Ref BackupRetentionCount
      DisableAutomatedBackup: !Ref DisableAutomatedBackup
      Engine: !Ref Engine
      EngineAttributes: 
        - Name: "CHEF_AUTOMATE_PIVOTAL_KEY"
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref OpsWorksCmSecret, ':SecretString:CHEF_AUTOMATE_PIVOTAL_KEY}}' ]]
        - Name: "CHEF_AUTOMATE_ADMIN_PASSWORD"
          Value: !Join ['', ['{{resolve:secretsmanager:', !Ref OpsWorksCmSecret, ':SecretString:CHEF_AUTOMATE_ADMIN_PASSWORD}}' ]]
      EngineModel: !Ref EngineModel
      EngineVersion: !Ref EngineVersion
      InstanceProfileArn: !GetAtt OpsWorksCmRoles.Outputs.InstanceProfileArn
      InstanceType: !Ref InstanceType
      KeyPair: !Ref KeyPairName
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      SecurityGroupIds: 
        - !GetAtt OpsworksCmSecurityGroup.Outputs.SecurityGroupId
      ServiceRoleArn: !GetAtt OpsWorksCmRoles.Outputs.ServiceRoleArn
      SubnetIds: 
        - !Ref OpsWorksCmSubnetA
        - !Ref OpsWorksCmSubnetB
        - !Ref OpsWorksCmSubnetC
Outputs:
  endpoint:
    Description: OpsWorksCM Server Endpoint
    Value: !GetAtt [OpsWorksCmServer, Endpoint]